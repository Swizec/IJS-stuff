import sys

Import("DEBUG")
Import("env")
Import("libs")
Import("libpath")

cpppath = env["CPPPATH"]
if DEBUG and sys.platform == "win32":
	libs = ['swift','gtestd'] + libs  # order is important, crypto needs to be last
else:
	libs = ['swift','gtest'] + libs  # order is important, crypto needs to be last

if sys.platform == "win32":
    cpppath = ".."
    libpath += '..;'
    if DEBUG:
        env.Append(CXXFLAGS="/Zi /Yd /MTd")
else:
    cpppath = cpppath + ':..'
    libpath += ':..'
    if DEBUG:
        env.Append(CXXFLAGS="-g")

print "tests: libpath is",libpath

env.Program( 
    target='binstest2',
    source=['binstest2.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

env.Program( 
    target='dgramtest',
    source=['dgramtest.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

env.Program( 
    target='hashtest',
    source=['hashtest.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

#env.Program( 
#    target='ledbattest',
#    source=['ledbattest.cpp'],
#    CPPPATH=cpppath,
#    LIBS=libs,
#    LIBPATH=libpath )


#if sys.platform != "win32":
#    # Arno: Needs getopt
#    env.Program( 
#        target='ledbattest2',
#        source=['ledbattest2.cpp'],
#        CPPPATH=cpppath,
#        LIBS=libs,
#        LIBPATH=libpath )

env.Program( 
    target='freemap',
    source=['freemap.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

env.Program( 
    target='bin64test',
    source=['bin64test.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

env.Program( 
    target='transfertest',
    source=['transfertest.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

env.Program( 
    target='connecttest',
    source=['connecttest.cpp'],
    CPPPATH=cpppath,
    LIBS=libs,
    LIBPATH=libpath )

